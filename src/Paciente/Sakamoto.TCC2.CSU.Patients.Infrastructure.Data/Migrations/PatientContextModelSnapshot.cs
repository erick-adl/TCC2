// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sakamoto.TCC2.CSU.Patients.Infrastructure.Data.Context;

namespace Sakamoto.TCC2.CSU.Patients.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PatientContext))]
    partial class PatientContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sakamoto.TCC2.CSU.Patients.Domain.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<int>("HeartRate")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Sakamoto.TCC2.CSU.Patients.Domain.Models.Patient", b =>
                {
                    b.OwnsOne("Sakamoto.TCC2.CSU.Patients.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnName("City")
                                .HasColumnType("varchar(100)")
                                .HasMaxLength(100);

                            b1.Property<string>("District")
                                .HasColumnName("District")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(255);

                            b1.Property<string>("Number")
                                .HasColumnName("Number")
                                .HasColumnType("varchar(10)")
                                .HasMaxLength(10);

                            b1.Property<string>("Observation")
                                .HasColumnName("Observation")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(255);

                            b1.Property<string>("PostalCode")
                                .HasColumnName("PostalCode")
                                .HasColumnType("varchar(8)")
                                .HasMaxLength(8);

                            b1.Property<string>("State")
                                .HasColumnName("State")
                                .HasColumnType("varchar(2)")
                                .HasMaxLength(2);

                            b1.Property<string>("Street")
                                .HasColumnName("Street")
                                .HasColumnType("varchar(255)")
                                .HasMaxLength(255);

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });

                    b.OwnsOne("Sakamoto.TCC2.CSU.Patients.Domain.ValueObjects.CPF", "Cpf", b1 =>
                        {
                            b1.Property<Guid>("PatientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnName("CPF")
                                .HasColumnType("varchar(11)")
                                .HasMaxLength(11);

                            b1.HasKey("PatientId");

                            b1.ToTable("Patients");

                            b1.WithOwner()
                                .HasForeignKey("PatientId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
